// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: github.com/openconfig/bootz/proto/bootz.proto

package bootz

import (
	authz "github.com/openconfig/gnsi/authz"
	certz "github.com/openconfig/gnsi/certz"
	credentialz "github.com/openconfig/gnsi/credentialz"
	pathz "github.com/openconfig/gnsi/pathz"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BootMode int32

const (
	BootMode_BOOT_MODE_UNSPECIFIED BootMode = 0
	BootMode_BOOT_MODE_INSECURE    BootMode = 1
	BootMode_BOOT_MODE_SECURE      BootMode = 2
)

// Enum value maps for BootMode.
var (
	BootMode_name = map[int32]string{
		0: "BOOT_MODE_UNSPECIFIED",
		1: "BOOT_MODE_INSECURE",
		2: "BOOT_MODE_SECURE",
	}
	BootMode_value = map[string]int32{
		"BOOT_MODE_UNSPECIFIED": 0,
		"BOOT_MODE_INSECURE":    1,
		"BOOT_MODE_SECURE":      2,
	}
)

func (x BootMode) Enum() *BootMode {
	p := new(BootMode)
	*p = x
	return p
}

func (x BootMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[0].Descriptor()
}

func (BootMode) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[0]
}

func (x BootMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootMode.Descriptor instead.
func (BootMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{0}
}

type ControlCardState_ControlCardStatus int32

const (
	ControlCardState_CONTROL_CARD_STATUS_UNSPECIFIED     ControlCardState_ControlCardStatus = 0
	ControlCardState_CONTROL_CARD_STATUS_NOT_INITIALIZED ControlCardState_ControlCardStatus = 1
	ControlCardState_CONTROL_CARD_STATUS_INITIALIZED     ControlCardState_ControlCardStatus = 2
)

// Enum value maps for ControlCardState_ControlCardStatus.
var (
	ControlCardState_ControlCardStatus_name = map[int32]string{
		0: "CONTROL_CARD_STATUS_UNSPECIFIED",
		1: "CONTROL_CARD_STATUS_NOT_INITIALIZED",
		2: "CONTROL_CARD_STATUS_INITIALIZED",
	}
	ControlCardState_ControlCardStatus_value = map[string]int32{
		"CONTROL_CARD_STATUS_UNSPECIFIED":     0,
		"CONTROL_CARD_STATUS_NOT_INITIALIZED": 1,
		"CONTROL_CARD_STATUS_INITIALIZED":     2,
	}
)

func (x ControlCardState_ControlCardStatus) Enum() *ControlCardState_ControlCardStatus {
	p := new(ControlCardState_ControlCardStatus)
	*p = x
	return p
}

func (x ControlCardState_ControlCardStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlCardState_ControlCardStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[1].Descriptor()
}

func (ControlCardState_ControlCardStatus) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[1]
}

func (x ControlCardState_ControlCardStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlCardState_ControlCardStatus.Descriptor instead.
func (ControlCardState_ControlCardStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{6, 0}
}

type ReportStatusRequest_BootstrapStatus int32

const (
	ReportStatusRequest_BOOTSTRAP_STATUS_UNSPECIFIED ReportStatusRequest_BootstrapStatus = 0
	ReportStatusRequest_BOOTSTRAP_STATUS_SUCCESS     ReportStatusRequest_BootstrapStatus = 1
	ReportStatusRequest_BOOTSTRAP_STATUS_FAILURE     ReportStatusRequest_BootstrapStatus = 2
	ReportStatusRequest_BOOTSTRAP_STATUS_INITIATED   ReportStatusRequest_BootstrapStatus = 3
)

// Enum value maps for ReportStatusRequest_BootstrapStatus.
var (
	ReportStatusRequest_BootstrapStatus_name = map[int32]string{
		0: "BOOTSTRAP_STATUS_UNSPECIFIED",
		1: "BOOTSTRAP_STATUS_SUCCESS",
		2: "BOOTSTRAP_STATUS_FAILURE",
		3: "BOOTSTRAP_STATUS_INITIATED",
	}
	ReportStatusRequest_BootstrapStatus_value = map[string]int32{
		"BOOTSTRAP_STATUS_UNSPECIFIED": 0,
		"BOOTSTRAP_STATUS_SUCCESS":     1,
		"BOOTSTRAP_STATUS_FAILURE":     2,
		"BOOTSTRAP_STATUS_INITIATED":   3,
	}
)

func (x ReportStatusRequest_BootstrapStatus) Enum() *ReportStatusRequest_BootstrapStatus {
	p := new(ReportStatusRequest_BootstrapStatus)
	*p = x
	return p
}

func (x ReportStatusRequest_BootstrapStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportStatusRequest_BootstrapStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[2].Descriptor()
}

func (ReportStatusRequest_BootstrapStatus) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[2]
}

func (x ReportStatusRequest_BootstrapStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportStatusRequest_BootstrapStatus.Descriptor instead.
func (ReportStatusRequest_BootstrapStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{15, 0}
}

type Identity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*Identity_IdevidCert
	//	*Identity_EkPub
	//	*Identity_PpkPub
	//	*Identity_PpkCsr
	Type          isIdentity_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Identity) Reset() {
	*x = Identity{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{0}
}

func (x *Identity) GetType() isIdentity_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Identity) GetIdevidCert() string {
	if x != nil {
		if x, ok := x.Type.(*Identity_IdevidCert); ok {
			return x.IdevidCert
		}
	}
	return ""
}

func (x *Identity) GetEkPub() bool {
	if x != nil {
		if x, ok := x.Type.(*Identity_EkPub); ok {
			return x.EkPub
		}
	}
	return false
}

func (x *Identity) GetPpkPub() bool {
	if x != nil {
		if x, ok := x.Type.(*Identity_PpkPub); ok {
			return x.PpkPub
		}
	}
	return false
}

func (x *Identity) GetPpkCsr() []byte {
	if x != nil {
		if x, ok := x.Type.(*Identity_PpkCsr); ok {
			return x.PpkCsr
		}
	}
	return nil
}

type isIdentity_Type interface {
	isIdentity_Type()
}

type Identity_IdevidCert struct {
	IdevidCert string `protobuf:"bytes,1,opt,name=idevid_cert,json=idevidCert,proto3,oneof"`
}

type Identity_EkPub struct {
	EkPub bool `protobuf:"varint,2,opt,name=ek_pub,json=ekPub,proto3,oneof"`
}

type Identity_PpkPub struct {
	PpkPub bool `protobuf:"varint,3,opt,name=ppk_pub,json=ppkPub,proto3,oneof"`
}

type Identity_PpkCsr struct {
	PpkCsr []byte `protobuf:"bytes,4,opt,name=ppk_csr,json=ppkCsr,proto3,oneof"`
}

func (*Identity_IdevidCert) isIdentity_Type() {}

func (*Identity_EkPub) isIdentity_Type() {}

func (*Identity_PpkPub) isIdentity_Type() {}

func (*Identity_PpkCsr) isIdentity_Type() {}

type GetBootstrapDataRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ChassisDescriptor *ChassisDescriptor     `protobuf:"bytes,1,opt,name=chassis_descriptor,json=chassisDescriptor,proto3" json:"chassis_descriptor,omitempty"`
	ControlCardState  *ControlCardState      `protobuf:"bytes,2,opt,name=control_card_state,json=controlCardState,proto3" json:"control_card_state,omitempty"`
	Nonce             string                 `protobuf:"bytes,1001,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Identity          *Identity              `protobuf:"bytes,1003,opt,name=identity,proto3" json:"identity,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetBootstrapDataRequest) Reset() {
	*x = GetBootstrapDataRequest{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBootstrapDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapDataRequest) ProtoMessage() {}

func (x *GetBootstrapDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapDataRequest.ProtoReflect.Descriptor instead.
func (*GetBootstrapDataRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{1}
}

func (x *GetBootstrapDataRequest) GetChassisDescriptor() *ChassisDescriptor {
	if x != nil {
		return x.ChassisDescriptor
	}
	return nil
}

func (x *GetBootstrapDataRequest) GetControlCardState() *ControlCardState {
	if x != nil {
		return x.ControlCardState
	}
	return nil
}

func (x *GetBootstrapDataRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *GetBootstrapDataRequest) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type BootstrapStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*BootstrapStreamRequest_BootstrapRequest
	//	*BootstrapStreamRequest_Response_
	//	*BootstrapStreamRequest_ReportStatusRequest
	//	*BootstrapStreamRequest_EkIdentityRequest
	Type          isBootstrapStreamRequest_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapStreamRequest) Reset() {
	*x = BootstrapStreamRequest{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapStreamRequest) ProtoMessage() {}

func (x *BootstrapStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapStreamRequest.ProtoReflect.Descriptor instead.
func (*BootstrapStreamRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{2}
}

func (x *BootstrapStreamRequest) GetType() isBootstrapStreamRequest_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BootstrapStreamRequest) GetBootstrapRequest() *GetBootstrapDataRequest {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamRequest_BootstrapRequest); ok {
			return x.BootstrapRequest
		}
	}
	return nil
}

func (x *BootstrapStreamRequest) GetResponse() *BootstrapStreamRequest_Response {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamRequest_Response_); ok {
			return x.Response
		}
	}
	return nil
}

func (x *BootstrapStreamRequest) GetReportStatusRequest() *ReportStatusRequest {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamRequest_ReportStatusRequest); ok {
			return x.ReportStatusRequest
		}
	}
	return nil
}

func (x *BootstrapStreamRequest) GetEkIdentityRequest() *BootstrapStreamRequest_EKIdentityRequest {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamRequest_EkIdentityRequest); ok {
			return x.EkIdentityRequest
		}
	}
	return nil
}

type isBootstrapStreamRequest_Type interface {
	isBootstrapStreamRequest_Type()
}

type BootstrapStreamRequest_BootstrapRequest struct {
	BootstrapRequest *GetBootstrapDataRequest `protobuf:"bytes,1,opt,name=bootstrap_request,json=bootstrapRequest,proto3,oneof"`
}

type BootstrapStreamRequest_Response_ struct {
	Response *BootstrapStreamRequest_Response `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type BootstrapStreamRequest_ReportStatusRequest struct {
	ReportStatusRequest *ReportStatusRequest `protobuf:"bytes,3,opt,name=report_status_request,json=reportStatusRequest,proto3,oneof"`
}

type BootstrapStreamRequest_EkIdentityRequest struct {
	EkIdentityRequest *BootstrapStreamRequest_EKIdentityRequest `protobuf:"bytes,4,opt,name=ek_identity_request,json=ekIdentityRequest,proto3,oneof"`
}

func (*BootstrapStreamRequest_BootstrapRequest) isBootstrapStreamRequest_Type() {}

func (*BootstrapStreamRequest_Response_) isBootstrapStreamRequest_Type() {}

func (*BootstrapStreamRequest_ReportStatusRequest) isBootstrapStreamRequest_Type() {}

func (*BootstrapStreamRequest_EkIdentityRequest) isBootstrapStreamRequest_Type() {}

type BootstrapStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*BootstrapStreamResponse_Challenge_
	//	*BootstrapStreamResponse_BootstrapResponse
	//	*BootstrapStreamResponse_ReportStatusResponse
	//	*BootstrapStreamResponse_EkIdentityResponse
	Type          isBootstrapStreamResponse_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapStreamResponse) Reset() {
	*x = BootstrapStreamResponse{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapStreamResponse) ProtoMessage() {}

func (x *BootstrapStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapStreamResponse.ProtoReflect.Descriptor instead.
func (*BootstrapStreamResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{3}
}

func (x *BootstrapStreamResponse) GetType() isBootstrapStreamResponse_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BootstrapStreamResponse) GetChallenge() *BootstrapStreamResponse_Challenge {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamResponse_Challenge_); ok {
			return x.Challenge
		}
	}
	return nil
}

func (x *BootstrapStreamResponse) GetBootstrapResponse() *GetBootstrapDataResponse {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamResponse_BootstrapResponse); ok {
			return x.BootstrapResponse
		}
	}
	return nil
}

func (x *BootstrapStreamResponse) GetReportStatusResponse() *EmptyResponse {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamResponse_ReportStatusResponse); ok {
			return x.ReportStatusResponse
		}
	}
	return nil
}

func (x *BootstrapStreamResponse) GetEkIdentityResponse() *BootstrapStreamResponse_EKIdentityResponse {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamResponse_EkIdentityResponse); ok {
			return x.EkIdentityResponse
		}
	}
	return nil
}

type isBootstrapStreamResponse_Type interface {
	isBootstrapStreamResponse_Type()
}

type BootstrapStreamResponse_Challenge_ struct {
	Challenge *BootstrapStreamResponse_Challenge `protobuf:"bytes,1,opt,name=challenge,proto3,oneof"`
}

type BootstrapStreamResponse_BootstrapResponse struct {
	BootstrapResponse *GetBootstrapDataResponse `protobuf:"bytes,2,opt,name=bootstrap_response,json=bootstrapResponse,proto3,oneof"`
}

type BootstrapStreamResponse_ReportStatusResponse struct {
	ReportStatusResponse *EmptyResponse `protobuf:"bytes,3,opt,name=report_status_response,json=reportStatusResponse,proto3,oneof"`
}

type BootstrapStreamResponse_EkIdentityResponse struct {
	EkIdentityResponse *BootstrapStreamResponse_EKIdentityResponse `protobuf:"bytes,4,opt,name=ek_identity_response,json=ekIdentityResponse,proto3,oneof"`
}

func (*BootstrapStreamResponse_Challenge_) isBootstrapStreamResponse_Type() {}

func (*BootstrapStreamResponse_BootstrapResponse) isBootstrapStreamResponse_Type() {}

func (*BootstrapStreamResponse_ReportStatusResponse) isBootstrapStreamResponse_Type() {}

func (*BootstrapStreamResponse_EkIdentityResponse) isBootstrapStreamResponse_Type() {}

type ChassisDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Manufacturer  string                 `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	PartNumber    string                 `protobuf:"bytes,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	SerialNumber  string                 `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	ControlCards  []*ControlCard         `protobuf:"bytes,4,rep,name=control_cards,json=controlCards,proto3" json:"control_cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChassisDescriptor) Reset() {
	*x = ChassisDescriptor{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChassisDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChassisDescriptor) ProtoMessage() {}

func (x *ChassisDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChassisDescriptor.ProtoReflect.Descriptor instead.
func (*ChassisDescriptor) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{4}
}

func (x *ChassisDescriptor) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *ChassisDescriptor) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *ChassisDescriptor) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ChassisDescriptor) GetControlCards() []*ControlCard {
	if x != nil {
		return x.ControlCards
	}
	return nil
}

type ControlCard struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	PartNumber   string                 `protobuf:"bytes,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	SerialNumber string                 `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// Deprecated: Marked as deprecated in github.com/openconfig/bootz/proto/bootz.proto.
	Slot          int32  `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
	SlotId        string `protobuf:"bytes,4,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlCard) Reset() {
	*x = ControlCard{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCard) ProtoMessage() {}

func (x *ControlCard) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCard.ProtoReflect.Descriptor instead.
func (*ControlCard) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{5}
}

func (x *ControlCard) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *ControlCard) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

// Deprecated: Marked as deprecated in github.com/openconfig/bootz/proto/bootz.proto.
func (x *ControlCard) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ControlCard) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

type ControlCardState struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	SerialNumber  string                             `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Status        ControlCardState_ControlCardStatus `protobuf:"varint,2,opt,name=status,proto3,enum=bootz.ControlCardState_ControlCardStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlCardState) Reset() {
	*x = ControlCardState{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlCardState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCardState) ProtoMessage() {}

func (x *ControlCardState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCardState.ProtoReflect.Descriptor instead.
func (*ControlCardState) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{6}
}

func (x *ControlCardState) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ControlCardState) GetStatus() ControlCardState_ControlCardStatus {
	if x != nil {
		return x.Status
	}
	return ControlCardState_CONTROL_CARD_STATUS_UNSPECIFIED
}

type BootstrapDataResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SerialNum        string                 `protobuf:"bytes,1,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	IntendedImage    *SoftwareImage         `protobuf:"bytes,2,opt,name=intended_image,json=intendedImage,proto3" json:"intended_image,omitempty"`
	BootPasswordHash string                 `protobuf:"bytes,3,opt,name=boot_password_hash,json=bootPasswordHash,proto3" json:"boot_password_hash,omitempty"`
	ServerTrustCert  string                 `protobuf:"bytes,4,opt,name=server_trust_cert,json=serverTrustCert,proto3" json:"server_trust_cert,omitempty"`
	BootConfig       *BootConfig            `protobuf:"bytes,5,opt,name=boot_config,json=bootConfig,proto3" json:"boot_config,omitempty"`
	Credentials      *Credentials           `protobuf:"bytes,6,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Pathz            *pathz.UploadRequest   `protobuf:"bytes,7,opt,name=pathz,proto3" json:"pathz,omitempty"`
	Authz            *authz.UploadRequest   `protobuf:"bytes,8,opt,name=authz,proto3" json:"authz,omitempty"`
	// Deprecated: Marked as deprecated in github.com/openconfig/bootz/proto/bootz.proto.
	Certificates  *certz.UploadRequest `protobuf:"bytes,9,opt,name=certificates,proto3" json:"certificates,omitempty"`
	CertzProfiles *CertzProfiles       `protobuf:"bytes,10,opt,name=certz_profiles,json=certzProfiles,proto3" json:"certz_profiles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapDataResponse) Reset() {
	*x = BootstrapDataResponse{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapDataResponse) ProtoMessage() {}

func (x *BootstrapDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapDataResponse.ProtoReflect.Descriptor instead.
func (*BootstrapDataResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{7}
}

func (x *BootstrapDataResponse) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *BootstrapDataResponse) GetIntendedImage() *SoftwareImage {
	if x != nil {
		return x.IntendedImage
	}
	return nil
}

func (x *BootstrapDataResponse) GetBootPasswordHash() string {
	if x != nil {
		return x.BootPasswordHash
	}
	return ""
}

func (x *BootstrapDataResponse) GetServerTrustCert() string {
	if x != nil {
		return x.ServerTrustCert
	}
	return ""
}

func (x *BootstrapDataResponse) GetBootConfig() *BootConfig {
	if x != nil {
		return x.BootConfig
	}
	return nil
}

func (x *BootstrapDataResponse) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *BootstrapDataResponse) GetPathz() *pathz.UploadRequest {
	if x != nil {
		return x.Pathz
	}
	return nil
}

func (x *BootstrapDataResponse) GetAuthz() *authz.UploadRequest {
	if x != nil {
		return x.Authz
	}
	return nil
}

// Deprecated: Marked as deprecated in github.com/openconfig/bootz/proto/bootz.proto.
func (x *BootstrapDataResponse) GetCertificates() *certz.UploadRequest {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *BootstrapDataResponse) GetCertzProfiles() *CertzProfiles {
	if x != nil {
		return x.CertzProfiles
	}
	return nil
}

type CertzProfiles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Profiles      []*CertzProfile        `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertzProfiles) Reset() {
	*x = CertzProfiles{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertzProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertzProfiles) ProtoMessage() {}

func (x *CertzProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertzProfiles.ProtoReflect.Descriptor instead.
func (*CertzProfiles) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{8}
}

func (x *CertzProfiles) GetProfiles() []*CertzProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type CertzProfile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SslProfileId  string                 `protobuf:"bytes,1,opt,name=ssl_profile_id,json=sslProfileId,proto3" json:"ssl_profile_id,omitempty"`
	Certz         *certz.UploadRequest   `protobuf:"bytes,2,opt,name=certz,proto3" json:"certz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertzProfile) Reset() {
	*x = CertzProfile{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertzProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertzProfile) ProtoMessage() {}

func (x *CertzProfile) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertzProfile.ProtoReflect.Descriptor instead.
func (*CertzProfile) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{9}
}

func (x *CertzProfile) GetSslProfileId() string {
	if x != nil {
		return x.SslProfileId
	}
	return ""
}

func (x *CertzProfile) GetCertz() *certz.UploadRequest {
	if x != nil {
		return x.Certz
	}
	return nil
}

type BootstrapDataSigned struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Responses     []*BootstrapDataResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	Nonce         string                   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapDataSigned) Reset() {
	*x = BootstrapDataSigned{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapDataSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapDataSigned) ProtoMessage() {}

func (x *BootstrapDataSigned) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapDataSigned.ProtoReflect.Descriptor instead.
func (*BootstrapDataSigned) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{10}
}

func (x *BootstrapDataSigned) GetResponses() []*BootstrapDataResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *BootstrapDataSigned) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type GetBootstrapDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in github.com/openconfig/bootz/proto/bootz.proto.
	SignedResponse          *BootstrapDataSigned `protobuf:"bytes,1,opt,name=signed_response,json=signedResponse,proto3" json:"signed_response,omitempty"`
	OwnershipVoucher        []byte               `protobuf:"bytes,101,opt,name=ownership_voucher,json=ownershipVoucher,proto3" json:"ownership_voucher,omitempty"`
	OwnershipCertificate    []byte               `protobuf:"bytes,102,opt,name=ownership_certificate,json=ownershipCertificate,proto3" json:"ownership_certificate,omitempty"`
	ResponseSignature       string               `protobuf:"bytes,103,opt,name=response_signature,json=responseSignature,proto3" json:"response_signature,omitempty"`
	SerializedBootstrapData []byte               `protobuf:"bytes,104,opt,name=serialized_bootstrap_data,json=serializedBootstrapData,proto3" json:"serialized_bootstrap_data,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetBootstrapDataResponse) Reset() {
	*x = GetBootstrapDataResponse{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBootstrapDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapDataResponse) ProtoMessage() {}

func (x *GetBootstrapDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapDataResponse.ProtoReflect.Descriptor instead.
func (*GetBootstrapDataResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{11}
}

// Deprecated: Marked as deprecated in github.com/openconfig/bootz/proto/bootz.proto.
func (x *GetBootstrapDataResponse) GetSignedResponse() *BootstrapDataSigned {
	if x != nil {
		return x.SignedResponse
	}
	return nil
}

func (x *GetBootstrapDataResponse) GetOwnershipVoucher() []byte {
	if x != nil {
		return x.OwnershipVoucher
	}
	return nil
}

func (x *GetBootstrapDataResponse) GetOwnershipCertificate() []byte {
	if x != nil {
		return x.OwnershipCertificate
	}
	return nil
}

func (x *GetBootstrapDataResponse) GetResponseSignature() string {
	if x != nil {
		return x.ResponseSignature
	}
	return ""
}

func (x *GetBootstrapDataResponse) GetSerializedBootstrapData() []byte {
	if x != nil {
		return x.SerializedBootstrapData
	}
	return nil
}

type SoftwareImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	OsImageHash   string                 `protobuf:"bytes,4,opt,name=os_image_hash,json=osImageHash,proto3" json:"os_image_hash,omitempty"`
	HashAlgorithm string                 `protobuf:"bytes,5,opt,name=hash_algorithm,json=hashAlgorithm,proto3" json:"hash_algorithm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoftwareImage) Reset() {
	*x = SoftwareImage{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoftwareImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareImage) ProtoMessage() {}

func (x *SoftwareImage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareImage.ProtoReflect.Descriptor instead.
func (*SoftwareImage) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{12}
}

func (x *SoftwareImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SoftwareImage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SoftwareImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SoftwareImage) GetOsImageHash() string {
	if x != nil {
		return x.OsImageHash
	}
	return ""
}

func (x *SoftwareImage) GetHashAlgorithm() string {
	if x != nil {
		return x.HashAlgorithm
	}
	return ""
}

type Credentials struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Credentials   []*credentialz.AuthorizedKeysRequest  `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
	Users         []*credentialz.AuthorizedUsersRequest `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	Passwords     []*credentialz.PasswordRequest        `protobuf:"bytes,3,rep,name=passwords,proto3" json:"passwords,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{13}
}

func (x *Credentials) GetCredentials() []*credentialz.AuthorizedKeysRequest {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *Credentials) GetUsers() []*credentialz.AuthorizedUsersRequest {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Credentials) GetPasswords() []*credentialz.PasswordRequest {
	if x != nil {
		return x.Passwords
	}
	return nil
}

type BootConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Metadata            *structpb.Struct       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	VendorConfig        []byte                 `protobuf:"bytes,2,opt,name=vendor_config,json=vendorConfig,proto3" json:"vendor_config,omitempty"`
	OcConfig            []byte                 `protobuf:"bytes,3,opt,name=oc_config,json=ocConfig,proto3" json:"oc_config,omitempty"`
	DynamicVendorConfig []byte                 `protobuf:"bytes,5,opt,name=dynamic_vendor_config,json=dynamicVendorConfig,proto3" json:"dynamic_vendor_config,omitempty"`
	DynamicOcConfig     []byte                 `protobuf:"bytes,6,opt,name=dynamic_oc_config,json=dynamicOcConfig,proto3" json:"dynamic_oc_config,omitempty"`
	BootloaderConfig    *structpb.Struct       `protobuf:"bytes,4,opt,name=bootloader_config,json=bootloaderConfig,proto3" json:"bootloader_config,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BootConfig) Reset() {
	*x = BootConfig{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootConfig) ProtoMessage() {}

func (x *BootConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootConfig.ProtoReflect.Descriptor instead.
func (*BootConfig) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{14}
}

func (x *BootConfig) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootConfig) GetVendorConfig() []byte {
	if x != nil {
		return x.VendorConfig
	}
	return nil
}

func (x *BootConfig) GetOcConfig() []byte {
	if x != nil {
		return x.OcConfig
	}
	return nil
}

func (x *BootConfig) GetDynamicVendorConfig() []byte {
	if x != nil {
		return x.DynamicVendorConfig
	}
	return nil
}

func (x *BootConfig) GetDynamicOcConfig() []byte {
	if x != nil {
		return x.DynamicOcConfig
	}
	return nil
}

func (x *BootConfig) GetBootloaderConfig() *structpb.Struct {
	if x != nil {
		return x.BootloaderConfig
	}
	return nil
}

type ReportStatusRequest struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Status        ReportStatusRequest_BootstrapStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bootz.ReportStatusRequest_BootstrapStatus" json:"status,omitempty"`
	StatusMessage string                              `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	States        []*ControlCardState                 `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty"`
	Identity      *Identity                           `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportStatusRequest) Reset() {
	*x = ReportStatusRequest{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStatusRequest) ProtoMessage() {}

func (x *ReportStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStatusRequest.ProtoReflect.Descriptor instead.
func (*ReportStatusRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{15}
}

func (x *ReportStatusRequest) GetStatus() ReportStatusRequest_BootstrapStatus {
	if x != nil {
		return x.Status
	}
	return ReportStatusRequest_BOOTSTRAP_STATUS_UNSPECIFIED
}

func (x *ReportStatusRequest) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *ReportStatusRequest) GetStates() []*ControlCardState {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ReportStatusRequest) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{16}
}

type BootstrapStreamRequest_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*BootstrapStreamRequest_Response_NonceSigned
	//	*BootstrapStreamRequest_Response_Nonce
	Type          isBootstrapStreamRequest_Response_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapStreamRequest_Response) Reset() {
	*x = BootstrapStreamRequest_Response{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapStreamRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapStreamRequest_Response) ProtoMessage() {}

func (x *BootstrapStreamRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapStreamRequest_Response.ProtoReflect.Descriptor instead.
func (*BootstrapStreamRequest_Response) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{2, 0}
}

func (x *BootstrapStreamRequest_Response) GetType() isBootstrapStreamRequest_Response_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BootstrapStreamRequest_Response) GetNonceSigned() []byte {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamRequest_Response_NonceSigned); ok {
			return x.NonceSigned
		}
	}
	return nil
}

func (x *BootstrapStreamRequest_Response) GetNonce() string {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamRequest_Response_Nonce); ok {
			return x.Nonce
		}
	}
	return ""
}

type isBootstrapStreamRequest_Response_Type interface {
	isBootstrapStreamRequest_Response_Type()
}

type BootstrapStreamRequest_Response_NonceSigned struct {
	NonceSigned []byte `protobuf:"bytes,1,opt,name=nonce_signed,json=nonceSigned,proto3,oneof"`
}

type BootstrapStreamRequest_Response_Nonce struct {
	Nonce string `protobuf:"bytes,2,opt,name=nonce,proto3,oneof"`
}

func (*BootstrapStreamRequest_Response_NonceSigned) isBootstrapStreamRequest_Response_Type() {}

func (*BootstrapStreamRequest_Response_Nonce) isBootstrapStreamRequest_Response_Type() {}

type BootstrapStreamRequest_EKIdentityRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EkPub           []byte                 `protobuf:"bytes,1,opt,name=ek_pub,json=ekPub,proto3" json:"ek_pub,omitempty"`
	IdentityRequest []byte                 `protobuf:"bytes,2,opt,name=identity_request,json=identityRequest,proto3" json:"identity_request,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BootstrapStreamRequest_EKIdentityRequest) Reset() {
	*x = BootstrapStreamRequest_EKIdentityRequest{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapStreamRequest_EKIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapStreamRequest_EKIdentityRequest) ProtoMessage() {}

func (x *BootstrapStreamRequest_EKIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapStreamRequest_EKIdentityRequest.ProtoReflect.Descriptor instead.
func (*BootstrapStreamRequest_EKIdentityRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{2, 1}
}

func (x *BootstrapStreamRequest_EKIdentityRequest) GetEkPub() []byte {
	if x != nil {
		return x.EkPub
	}
	return nil
}

func (x *BootstrapStreamRequest_EKIdentityRequest) GetIdentityRequest() []byte {
	if x != nil {
		return x.IdentityRequest
	}
	return nil
}

type BootstrapStreamResponse_Challenge struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*BootstrapStreamResponse_Challenge_Nonce
	//	*BootstrapStreamResponse_Challenge_NonceEncrypted
	//	*BootstrapStreamResponse_Challenge_CaPub
	Type          isBootstrapStreamResponse_Challenge_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapStreamResponse_Challenge) Reset() {
	*x = BootstrapStreamResponse_Challenge{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapStreamResponse_Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapStreamResponse_Challenge) ProtoMessage() {}

func (x *BootstrapStreamResponse_Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapStreamResponse_Challenge.ProtoReflect.Descriptor instead.
func (*BootstrapStreamResponse_Challenge) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{3, 0}
}

func (x *BootstrapStreamResponse_Challenge) GetType() isBootstrapStreamResponse_Challenge_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BootstrapStreamResponse_Challenge) GetNonce() string {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamResponse_Challenge_Nonce); ok {
			return x.Nonce
		}
	}
	return ""
}

func (x *BootstrapStreamResponse_Challenge) GetNonceEncrypted() []byte {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamResponse_Challenge_NonceEncrypted); ok {
			return x.NonceEncrypted
		}
	}
	return nil
}

func (x *BootstrapStreamResponse_Challenge) GetCaPub() []byte {
	if x != nil {
		if x, ok := x.Type.(*BootstrapStreamResponse_Challenge_CaPub); ok {
			return x.CaPub
		}
	}
	return nil
}

type isBootstrapStreamResponse_Challenge_Type interface {
	isBootstrapStreamResponse_Challenge_Type()
}

type BootstrapStreamResponse_Challenge_Nonce struct {
	Nonce string `protobuf:"bytes,1,opt,name=nonce,proto3,oneof"`
}

type BootstrapStreamResponse_Challenge_NonceEncrypted struct {
	NonceEncrypted []byte `protobuf:"bytes,2,opt,name=nonce_encrypted,json=nonceEncrypted,proto3,oneof"`
}

type BootstrapStreamResponse_Challenge_CaPub struct {
	CaPub []byte `protobuf:"bytes,3,opt,name=ca_pub,json=caPub,proto3,oneof"`
}

func (*BootstrapStreamResponse_Challenge_Nonce) isBootstrapStreamResponse_Challenge_Type() {}

func (*BootstrapStreamResponse_Challenge_NonceEncrypted) isBootstrapStreamResponse_Challenge_Type() {}

func (*BootstrapStreamResponse_Challenge_CaPub) isBootstrapStreamResponse_Challenge_Type() {}

type BootstrapStreamResponse_EKIdentityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asymmetric    []byte                 `protobuf:"bytes,1,opt,name=asymmetric,proto3" json:"asymmetric,omitempty"`
	Symmetric     []byte                 `protobuf:"bytes,2,opt,name=symmetric,proto3" json:"symmetric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapStreamResponse_EKIdentityResponse) Reset() {
	*x = BootstrapStreamResponse_EKIdentityResponse{}
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapStreamResponse_EKIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapStreamResponse_EKIdentityResponse) ProtoMessage() {}

func (x *BootstrapStreamResponse_EKIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapStreamResponse_EKIdentityResponse.ProtoReflect.Descriptor instead.
func (*BootstrapStreamResponse_EKIdentityResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{3, 1}
}

func (x *BootstrapStreamResponse_EKIdentityResponse) GetAsymmetric() []byte {
	if x != nil {
		return x.Asymmetric
	}
	return nil
}

func (x *BootstrapStreamResponse_EKIdentityResponse) GetSymmetric() []byte {
	if x != nil {
		return x.Symmetric
	}
	return nil
}

var File_github_com_openconfig_bootz_proto_bootz_proto protoreflect.FileDescriptor

const file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc = "" +
	"\n" +
	"-github.com/openconfig/bootz/proto/bootz.proto\x12\x05bootz\x1a\x1cgoogle/protobuf/struct.proto\x1a,github.com/openconfig/gnsi/authz/authz.proto\x1a,github.com/openconfig/gnsi/certz/certz.proto\x1a8github.com/openconfig/gnsi/credentialz/credentialz.proto\x1a,github.com/openconfig/gnsi/pathz/pathz.proto\"\x84\x01\n" +
	"\bIdentity\x12!\n" +
	"\videvid_cert\x18\x01 \x01(\tH\x00R\n" +
	"idevidCert\x12\x17\n" +
	"\x06ek_pub\x18\x02 \x01(\bH\x00R\x05ekPub\x12\x19\n" +
	"\appk_pub\x18\x03 \x01(\bH\x00R\x06ppkPub\x12\x19\n" +
	"\appk_csr\x18\x04 \x01(\fH\x00R\x06ppkCsrB\x06\n" +
	"\x04type\"\xee\x01\n" +
	"\x17GetBootstrapDataRequest\x12G\n" +
	"\x12chassis_descriptor\x18\x01 \x01(\v2\x18.bootz.ChassisDescriptorR\x11chassisDescriptor\x12E\n" +
	"\x12control_card_state\x18\x02 \x01(\v2\x17.bootz.ControlCardStateR\x10controlCardState\x12\x15\n" +
	"\x05nonce\x18\xe9\a \x01(\tR\x05nonce\x12,\n" +
	"\bidentity\x18\xeb\a \x01(\v2\x0f.bootz.IdentityR\bidentity\"\x92\x04\n" +
	"\x16BootstrapStreamRequest\x12M\n" +
	"\x11bootstrap_request\x18\x01 \x01(\v2\x1e.bootz.GetBootstrapDataRequestH\x00R\x10bootstrapRequest\x12D\n" +
	"\bresponse\x18\x02 \x01(\v2&.bootz.BootstrapStreamRequest.ResponseH\x00R\bresponse\x12P\n" +
	"\x15report_status_request\x18\x03 \x01(\v2\x1a.bootz.ReportStatusRequestH\x00R\x13reportStatusRequest\x12a\n" +
	"\x13ek_identity_request\x18\x04 \x01(\v2/.bootz.BootstrapStreamRequest.EKIdentityRequestH\x00R\x11ekIdentityRequest\x1aO\n" +
	"\bResponse\x12#\n" +
	"\fnonce_signed\x18\x01 \x01(\fH\x00R\vnonceSigned\x12\x16\n" +
	"\x05nonce\x18\x02 \x01(\tH\x00R\x05nonceB\x06\n" +
	"\x04type\x1aU\n" +
	"\x11EKIdentityRequest\x12\x15\n" +
	"\x06ek_pub\x18\x01 \x01(\fR\x05ekPub\x12)\n" +
	"\x10identity_request\x18\x02 \x01(\fR\x0fidentityRequestB\x06\n" +
	"\x04type\"\xb7\x04\n" +
	"\x17BootstrapStreamResponse\x12H\n" +
	"\tchallenge\x18\x01 \x01(\v2(.bootz.BootstrapStreamResponse.ChallengeH\x00R\tchallenge\x12P\n" +
	"\x12bootstrap_response\x18\x02 \x01(\v2\x1f.bootz.GetBootstrapDataResponseH\x00R\x11bootstrapResponse\x12L\n" +
	"\x16report_status_response\x18\x03 \x01(\v2\x14.bootz.EmptyResponseH\x00R\x14reportStatusResponse\x12e\n" +
	"\x14ek_identity_response\x18\x04 \x01(\v21.bootz.BootstrapStreamResponse.EKIdentityResponseH\x00R\x12ekIdentityResponse\x1ao\n" +
	"\tChallenge\x12\x16\n" +
	"\x05nonce\x18\x01 \x01(\tH\x00R\x05nonce\x12)\n" +
	"\x0fnonce_encrypted\x18\x02 \x01(\fH\x00R\x0enonceEncrypted\x12\x17\n" +
	"\x06ca_pub\x18\x03 \x01(\fH\x00R\x05caPubB\x06\n" +
	"\x04type\x1aR\n" +
	"\x12EKIdentityResponse\x12\x1e\n" +
	"\n" +
	"asymmetric\x18\x01 \x01(\fR\n" +
	"asymmetric\x12\x1c\n" +
	"\tsymmetric\x18\x02 \x01(\fR\tsymmetricB\x06\n" +
	"\x04type\"\xb6\x01\n" +
	"\x11ChassisDescriptor\x12\"\n" +
	"\fmanufacturer\x18\x01 \x01(\tR\fmanufacturer\x12\x1f\n" +
	"\vpart_number\x18\x02 \x01(\tR\n" +
	"partNumber\x12#\n" +
	"\rserial_number\x18\x03 \x01(\tR\fserialNumber\x127\n" +
	"\rcontrol_cards\x18\x04 \x03(\v2\x12.bootz.ControlCardR\fcontrolCards\"\x84\x01\n" +
	"\vControlCard\x12\x1f\n" +
	"\vpart_number\x18\x01 \x01(\tR\n" +
	"partNumber\x12#\n" +
	"\rserial_number\x18\x02 \x01(\tR\fserialNumber\x12\x16\n" +
	"\x04slot\x18\x03 \x01(\x05B\x02\x18\x01R\x04slot\x12\x17\n" +
	"\aslot_id\x18\x04 \x01(\tR\x06slotId\"\x83\x02\n" +
	"\x10ControlCardState\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\x12A\n" +
	"\x06status\x18\x02 \x01(\x0e2).bootz.ControlCardState.ControlCardStatusR\x06status\"\x86\x01\n" +
	"\x11ControlCardStatus\x12#\n" +
	"\x1fCONTROL_CARD_STATUS_UNSPECIFIED\x10\x00\x12'\n" +
	"#CONTROL_CARD_STATUS_NOT_INITIALIZED\x10\x01\x12#\n" +
	"\x1fCONTROL_CARD_STATUS_INITIALIZED\x10\x02\"\xa2\x04\n" +
	"\x15BootstrapDataResponse\x12\x1d\n" +
	"\n" +
	"serial_num\x18\x01 \x01(\tR\tserialNum\x12;\n" +
	"\x0eintended_image\x18\x02 \x01(\v2\x14.bootz.SoftwareImageR\rintendedImage\x12,\n" +
	"\x12boot_password_hash\x18\x03 \x01(\tR\x10bootPasswordHash\x12*\n" +
	"\x11server_trust_cert\x18\x04 \x01(\tR\x0fserverTrustCert\x122\n" +
	"\vboot_config\x18\x05 \x01(\v2\x11.bootz.BootConfigR\n" +
	"bootConfig\x124\n" +
	"\vcredentials\x18\x06 \x01(\v2\x12.bootz.CredentialsR\vcredentials\x122\n" +
	"\x05pathz\x18\a \x01(\v2\x1c.gnsi.pathz.v1.UploadRequestR\x05pathz\x122\n" +
	"\x05authz\x18\b \x01(\v2\x1c.gnsi.authz.v1.UploadRequestR\x05authz\x12D\n" +
	"\fcertificates\x18\t \x01(\v2\x1c.gnsi.certz.v1.UploadRequestB\x02\x18\x01R\fcertificates\x12;\n" +
	"\x0ecertz_profiles\x18\n" +
	" \x01(\v2\x14.bootz.CertzProfilesR\rcertzProfiles\"@\n" +
	"\rCertzProfiles\x12/\n" +
	"\bprofiles\x18\x01 \x03(\v2\x13.bootz.CertzProfileR\bprofiles\"h\n" +
	"\fCertzProfile\x12$\n" +
	"\x0essl_profile_id\x18\x01 \x01(\tR\fsslProfileId\x122\n" +
	"\x05certz\x18\x02 \x01(\v2\x1c.gnsi.certz.v1.UploadRequestR\x05certz\"g\n" +
	"\x13BootstrapDataSigned\x12:\n" +
	"\tresponses\x18\x01 \x03(\v2\x1c.bootz.BootstrapDataResponseR\tresponses\x12\x14\n" +
	"\x05nonce\x18\x02 \x01(\tR\x05nonce\"\xb0\x02\n" +
	"\x18GetBootstrapDataResponse\x12G\n" +
	"\x0fsigned_response\x18\x01 \x01(\v2\x1a.bootz.BootstrapDataSignedB\x02\x18\x01R\x0esignedResponse\x12+\n" +
	"\x11ownership_voucher\x18e \x01(\fR\x10ownershipVoucher\x123\n" +
	"\x15ownership_certificate\x18f \x01(\fR\x14ownershipCertificate\x12-\n" +
	"\x12response_signature\x18g \x01(\tR\x11responseSignature\x12:\n" +
	"\x19serialized_bootstrap_data\x18h \x01(\fR\x17serializedBootstrapData\"\x9a\x01\n" +
	"\rSoftwareImage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\"\n" +
	"\ros_image_hash\x18\x04 \x01(\tR\vosImageHash\x12%\n" +
	"\x0ehash_algorithm\x18\x05 \x01(\tR\rhashAlgorithm\"\xe2\x01\n" +
	"\vCredentials\x12L\n" +
	"\vcredentials\x18\x01 \x03(\v2*.gnsi.credentialz.v1.AuthorizedKeysRequestR\vcredentials\x12A\n" +
	"\x05users\x18\x02 \x03(\v2+.gnsi.credentialz.v1.AuthorizedUsersRequestR\x05users\x12B\n" +
	"\tpasswords\x18\x03 \x03(\v2$.gnsi.credentialz.v1.PasswordRequestR\tpasswords\"\xa9\x02\n" +
	"\n" +
	"BootConfig\x123\n" +
	"\bmetadata\x18\x01 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12#\n" +
	"\rvendor_config\x18\x02 \x01(\fR\fvendorConfig\x12\x1b\n" +
	"\toc_config\x18\x03 \x01(\fR\bocConfig\x122\n" +
	"\x15dynamic_vendor_config\x18\x05 \x01(\fR\x13dynamicVendorConfig\x12*\n" +
	"\x11dynamic_oc_config\x18\x06 \x01(\fR\x0fdynamicOcConfig\x12D\n" +
	"\x11bootloader_config\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x10bootloaderConfig\"\xf0\x02\n" +
	"\x13ReportStatusRequest\x12B\n" +
	"\x06status\x18\x01 \x01(\x0e2*.bootz.ReportStatusRequest.BootstrapStatusR\x06status\x12%\n" +
	"\x0estatus_message\x18\x02 \x01(\tR\rstatusMessage\x12/\n" +
	"\x06states\x18\x03 \x03(\v2\x17.bootz.ControlCardStateR\x06states\x12+\n" +
	"\bidentity\x18\x04 \x01(\v2\x0f.bootz.IdentityR\bidentity\"\x8f\x01\n" +
	"\x0fBootstrapStatus\x12 \n" +
	"\x1cBOOTSTRAP_STATUS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18BOOTSTRAP_STATUS_SUCCESS\x10\x01\x12\x1c\n" +
	"\x18BOOTSTRAP_STATUS_FAILURE\x10\x02\x12\x1e\n" +
	"\x1aBOOTSTRAP_STATUS_INITIATED\x10\x03\"\x0f\n" +
	"\rEmptyResponse*S\n" +
	"\bBootMode\x12\x19\n" +
	"\x15BOOT_MODE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12BOOT_MODE_INSECURE\x10\x01\x12\x14\n" +
	"\x10BOOT_MODE_SECURE\x10\x022\xfe\x01\n" +
	"\tBootstrap\x12U\n" +
	"\x10GetBootstrapData\x12\x1e.bootz.GetBootstrapDataRequest\x1a\x1f.bootz.GetBootstrapDataResponse\"\x00\x12B\n" +
	"\fReportStatus\x12\x1a.bootz.ReportStatusRequest\x1a\x14.bootz.EmptyResponse\"\x00\x12V\n" +
	"\x0fBootstrapStream\x12\x1d.bootz.BootstrapStreamRequest\x1a\x1e.bootz.BootstrapStreamResponse\"\x00(\x010\x01B)Z'github.com/openconfig/bootz/proto/bootzb\x06proto3"

var (
	file_github_com_openconfig_bootz_proto_bootz_proto_rawDescOnce sync.Once
	file_github_com_openconfig_bootz_proto_bootz_proto_rawDescData []byte
)

func file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_bootz_proto_bootz_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_bootz_proto_bootz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc), len(file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc)))
	})
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescData
}

var file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_github_com_openconfig_bootz_proto_bootz_proto_goTypes = []any{
	(BootMode)(0),                                      // 0: bootz.BootMode
	(ControlCardState_ControlCardStatus)(0),            // 1: bootz.ControlCardState.ControlCardStatus
	(ReportStatusRequest_BootstrapStatus)(0),           // 2: bootz.ReportStatusRequest.BootstrapStatus
	(*Identity)(nil),                                   // 3: bootz.Identity
	(*GetBootstrapDataRequest)(nil),                    // 4: bootz.GetBootstrapDataRequest
	(*BootstrapStreamRequest)(nil),                     // 5: bootz.BootstrapStreamRequest
	(*BootstrapStreamResponse)(nil),                    // 6: bootz.BootstrapStreamResponse
	(*ChassisDescriptor)(nil),                          // 7: bootz.ChassisDescriptor
	(*ControlCard)(nil),                                // 8: bootz.ControlCard
	(*ControlCardState)(nil),                           // 9: bootz.ControlCardState
	(*BootstrapDataResponse)(nil),                      // 10: bootz.BootstrapDataResponse
	(*CertzProfiles)(nil),                              // 11: bootz.CertzProfiles
	(*CertzProfile)(nil),                               // 12: bootz.CertzProfile
	(*BootstrapDataSigned)(nil),                        // 13: bootz.BootstrapDataSigned
	(*GetBootstrapDataResponse)(nil),                   // 14: bootz.GetBootstrapDataResponse
	(*SoftwareImage)(nil),                              // 15: bootz.SoftwareImage
	(*Credentials)(nil),                                // 16: bootz.Credentials
	(*BootConfig)(nil),                                 // 17: bootz.BootConfig
	(*ReportStatusRequest)(nil),                        // 18: bootz.ReportStatusRequest
	(*EmptyResponse)(nil),                              // 19: bootz.EmptyResponse
	(*BootstrapStreamRequest_Response)(nil),            // 20: bootz.BootstrapStreamRequest.Response
	(*BootstrapStreamRequest_EKIdentityRequest)(nil),   // 21: bootz.BootstrapStreamRequest.EKIdentityRequest
	(*BootstrapStreamResponse_Challenge)(nil),          // 22: bootz.BootstrapStreamResponse.Challenge
	(*BootstrapStreamResponse_EKIdentityResponse)(nil), // 23: bootz.BootstrapStreamResponse.EKIdentityResponse
	(*pathz.UploadRequest)(nil),                        // 24: gnsi.pathz.v1.UploadRequest
	(*authz.UploadRequest)(nil),                        // 25: gnsi.authz.v1.UploadRequest
	(*certz.UploadRequest)(nil),                        // 26: gnsi.certz.v1.UploadRequest
	(*credentialz.AuthorizedKeysRequest)(nil),          // 27: gnsi.credentialz.v1.AuthorizedKeysRequest
	(*credentialz.AuthorizedUsersRequest)(nil),         // 28: gnsi.credentialz.v1.AuthorizedUsersRequest
	(*credentialz.PasswordRequest)(nil),                // 29: gnsi.credentialz.v1.PasswordRequest
	(*structpb.Struct)(nil),                            // 30: google.protobuf.Struct
}
var file_github_com_openconfig_bootz_proto_bootz_proto_depIdxs = []int32{
	7,  // 0: bootz.GetBootstrapDataRequest.chassis_descriptor:type_name -> bootz.ChassisDescriptor
	9,  // 1: bootz.GetBootstrapDataRequest.control_card_state:type_name -> bootz.ControlCardState
	3,  // 2: bootz.GetBootstrapDataRequest.identity:type_name -> bootz.Identity
	4,  // 3: bootz.BootstrapStreamRequest.bootstrap_request:type_name -> bootz.GetBootstrapDataRequest
	20, // 4: bootz.BootstrapStreamRequest.response:type_name -> bootz.BootstrapStreamRequest.Response
	18, // 5: bootz.BootstrapStreamRequest.report_status_request:type_name -> bootz.ReportStatusRequest
	21, // 6: bootz.BootstrapStreamRequest.ek_identity_request:type_name -> bootz.BootstrapStreamRequest.EKIdentityRequest
	22, // 7: bootz.BootstrapStreamResponse.challenge:type_name -> bootz.BootstrapStreamResponse.Challenge
	14, // 8: bootz.BootstrapStreamResponse.bootstrap_response:type_name -> bootz.GetBootstrapDataResponse
	19, // 9: bootz.BootstrapStreamResponse.report_status_response:type_name -> bootz.EmptyResponse
	23, // 10: bootz.BootstrapStreamResponse.ek_identity_response:type_name -> bootz.BootstrapStreamResponse.EKIdentityResponse
	8,  // 11: bootz.ChassisDescriptor.control_cards:type_name -> bootz.ControlCard
	1,  // 12: bootz.ControlCardState.status:type_name -> bootz.ControlCardState.ControlCardStatus
	15, // 13: bootz.BootstrapDataResponse.intended_image:type_name -> bootz.SoftwareImage
	17, // 14: bootz.BootstrapDataResponse.boot_config:type_name -> bootz.BootConfig
	16, // 15: bootz.BootstrapDataResponse.credentials:type_name -> bootz.Credentials
	24, // 16: bootz.BootstrapDataResponse.pathz:type_name -> gnsi.pathz.v1.UploadRequest
	25, // 17: bootz.BootstrapDataResponse.authz:type_name -> gnsi.authz.v1.UploadRequest
	26, // 18: bootz.BootstrapDataResponse.certificates:type_name -> gnsi.certz.v1.UploadRequest
	11, // 19: bootz.BootstrapDataResponse.certz_profiles:type_name -> bootz.CertzProfiles
	12, // 20: bootz.CertzProfiles.profiles:type_name -> bootz.CertzProfile
	26, // 21: bootz.CertzProfile.certz:type_name -> gnsi.certz.v1.UploadRequest
	10, // 22: bootz.BootstrapDataSigned.responses:type_name -> bootz.BootstrapDataResponse
	13, // 23: bootz.GetBootstrapDataResponse.signed_response:type_name -> bootz.BootstrapDataSigned
	27, // 24: bootz.Credentials.credentials:type_name -> gnsi.credentialz.v1.AuthorizedKeysRequest
	28, // 25: bootz.Credentials.users:type_name -> gnsi.credentialz.v1.AuthorizedUsersRequest
	29, // 26: bootz.Credentials.passwords:type_name -> gnsi.credentialz.v1.PasswordRequest
	30, // 27: bootz.BootConfig.metadata:type_name -> google.protobuf.Struct
	30, // 28: bootz.BootConfig.bootloader_config:type_name -> google.protobuf.Struct
	2,  // 29: bootz.ReportStatusRequest.status:type_name -> bootz.ReportStatusRequest.BootstrapStatus
	9,  // 30: bootz.ReportStatusRequest.states:type_name -> bootz.ControlCardState
	3,  // 31: bootz.ReportStatusRequest.identity:type_name -> bootz.Identity
	4,  // 32: bootz.Bootstrap.GetBootstrapData:input_type -> bootz.GetBootstrapDataRequest
	18, // 33: bootz.Bootstrap.ReportStatus:input_type -> bootz.ReportStatusRequest
	5,  // 34: bootz.Bootstrap.BootstrapStream:input_type -> bootz.BootstrapStreamRequest
	14, // 35: bootz.Bootstrap.GetBootstrapData:output_type -> bootz.GetBootstrapDataResponse
	19, // 36: bootz.Bootstrap.ReportStatus:output_type -> bootz.EmptyResponse
	6,  // 37: bootz.Bootstrap.BootstrapStream:output_type -> bootz.BootstrapStreamResponse
	35, // [35:38] is the sub-list for method output_type
	32, // [32:35] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_bootz_proto_bootz_proto_init() }
func file_github_com_openconfig_bootz_proto_bootz_proto_init() {
	if File_github_com_openconfig_bootz_proto_bootz_proto != nil {
		return
	}
	file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[0].OneofWrappers = []any{
		(*Identity_IdevidCert)(nil),
		(*Identity_EkPub)(nil),
		(*Identity_PpkPub)(nil),
		(*Identity_PpkCsr)(nil),
	}
	file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[2].OneofWrappers = []any{
		(*BootstrapStreamRequest_BootstrapRequest)(nil),
		(*BootstrapStreamRequest_Response_)(nil),
		(*BootstrapStreamRequest_ReportStatusRequest)(nil),
		(*BootstrapStreamRequest_EkIdentityRequest)(nil),
	}
	file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[3].OneofWrappers = []any{
		(*BootstrapStreamResponse_Challenge_)(nil),
		(*BootstrapStreamResponse_BootstrapResponse)(nil),
		(*BootstrapStreamResponse_ReportStatusResponse)(nil),
		(*BootstrapStreamResponse_EkIdentityResponse)(nil),
	}
	file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[17].OneofWrappers = []any{
		(*BootstrapStreamRequest_Response_NonceSigned)(nil),
		(*BootstrapStreamRequest_Response_Nonce)(nil),
	}
	file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[19].OneofWrappers = []any{
		(*BootstrapStreamResponse_Challenge_Nonce)(nil),
		(*BootstrapStreamResponse_Challenge_NonceEncrypted)(nil),
		(*BootstrapStreamResponse_Challenge_CaPub)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc), len(file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_bootz_proto_bootz_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_bootz_proto_bootz_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_bootz_proto_bootz_proto = out.File
	file_github_com_openconfig_bootz_proto_bootz_proto_goTypes = nil
	file_github_com_openconfig_bootz_proto_bootz_proto_depIdxs = nil
}
