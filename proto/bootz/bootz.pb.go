// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: github.com/openconfig/bootz/proto/bootz.proto

package bootz

import (
	authz "github.com/openconfig/gnsi/authz"
	certz "github.com/openconfig/gnsi/certz"
	credentialz "github.com/openconfig/gnsi/credentialz"
	pathz "github.com/openconfig/gnsi/pathz"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlCardState_ControlCardStatus int32

const (
	ControlCardState_CONTROL_CARD_STATUS_UNSPECIFIED     ControlCardState_ControlCardStatus = 0
	ControlCardState_CONTROL_CARD_STATUS_NOT_INITIALIZED ControlCardState_ControlCardStatus = 1
	ControlCardState_CONTROL_CARD_STATUS_INITIALIZED     ControlCardState_ControlCardStatus = 2
)

// Enum value maps for ControlCardState_ControlCardStatus.
var (
	ControlCardState_ControlCardStatus_name = map[int32]string{
		0: "CONTROL_CARD_STATUS_UNSPECIFIED",
		1: "CONTROL_CARD_STATUS_NOT_INITIALIZED",
		2: "CONTROL_CARD_STATUS_INITIALIZED",
	}
	ControlCardState_ControlCardStatus_value = map[string]int32{
		"CONTROL_CARD_STATUS_UNSPECIFIED":     0,
		"CONTROL_CARD_STATUS_NOT_INITIALIZED": 1,
		"CONTROL_CARD_STATUS_INITIALIZED":     2,
	}
)

func (x ControlCardState_ControlCardStatus) Enum() *ControlCardState_ControlCardStatus {
	p := new(ControlCardState_ControlCardStatus)
	*p = x
	return p
}

func (x ControlCardState_ControlCardStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlCardState_ControlCardStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[0].Descriptor()
}

func (ControlCardState_ControlCardStatus) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[0]
}

func (x ControlCardState_ControlCardStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlCardState_ControlCardStatus.Descriptor instead.
func (ControlCardState_ControlCardStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{3, 0}
}

type ReportStatusRequest_BootstrapStatus int32

const (
	ReportStatusRequest_BOOTSTRAP_STATUS_UNSPECIFIED ReportStatusRequest_BootstrapStatus = 0
	ReportStatusRequest_BOOTSTRAP_STATUS_SUCCESS     ReportStatusRequest_BootstrapStatus = 1
	ReportStatusRequest_BOOTSTRAP_STATUS_FAILURE     ReportStatusRequest_BootstrapStatus = 2
	ReportStatusRequest_BOOTSTRAP_STATUS_INITIATED   ReportStatusRequest_BootstrapStatus = 3
)

// Enum value maps for ReportStatusRequest_BootstrapStatus.
var (
	ReportStatusRequest_BootstrapStatus_name = map[int32]string{
		0: "BOOTSTRAP_STATUS_UNSPECIFIED",
		1: "BOOTSTRAP_STATUS_SUCCESS",
		2: "BOOTSTRAP_STATUS_FAILURE",
		3: "BOOTSTRAP_STATUS_INITIATED",
	}
	ReportStatusRequest_BootstrapStatus_value = map[string]int32{
		"BOOTSTRAP_STATUS_UNSPECIFIED": 0,
		"BOOTSTRAP_STATUS_SUCCESS":     1,
		"BOOTSTRAP_STATUS_FAILURE":     2,
		"BOOTSTRAP_STATUS_INITIATED":   3,
	}
)

func (x ReportStatusRequest_BootstrapStatus) Enum() *ReportStatusRequest_BootstrapStatus {
	p := new(ReportStatusRequest_BootstrapStatus)
	*p = x
	return p
}

func (x ReportStatusRequest_BootstrapStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportStatusRequest_BootstrapStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[1].Descriptor()
}

func (ReportStatusRequest_BootstrapStatus) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes[1]
}

func (x ReportStatusRequest_BootstrapStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportStatusRequest_BootstrapStatus.Descriptor instead.
func (ReportStatusRequest_BootstrapStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{8, 0}
}

type GetBootstrapDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChassisDescriptor *ChassisDescriptor `protobuf:"bytes,1,opt,name=chassis_descriptor,json=chassisDescriptor,proto3" json:"chassis_descriptor,omitempty"`
	ControlCardState  *ControlCardState  `protobuf:"bytes,2,opt,name=control_card_state,json=controlCardState,proto3" json:"control_card_state,omitempty"`
	Nonce             string             `protobuf:"bytes,1001,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *GetBootstrapDataRequest) Reset() {
	*x = GetBootstrapDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapDataRequest) ProtoMessage() {}

func (x *GetBootstrapDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapDataRequest.ProtoReflect.Descriptor instead.
func (*GetBootstrapDataRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{0}
}

func (x *GetBootstrapDataRequest) GetChassisDescriptor() *ChassisDescriptor {
	if x != nil {
		return x.ChassisDescriptor
	}
	return nil
}

func (x *GetBootstrapDataRequest) GetControlCardState() *ControlCardState {
	if x != nil {
		return x.ControlCardState
	}
	return nil
}

func (x *GetBootstrapDataRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type ChassisDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manufacturer string         `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	PartNumber   string         `protobuf:"bytes,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	SerialNumber string         `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	ControlCards []*ControlCard `protobuf:"bytes,4,rep,name=control_cards,json=controlCards,proto3" json:"control_cards,omitempty"`
}

func (x *ChassisDescriptor) Reset() {
	*x = ChassisDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChassisDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChassisDescriptor) ProtoMessage() {}

func (x *ChassisDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChassisDescriptor.ProtoReflect.Descriptor instead.
func (*ChassisDescriptor) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{1}
}

func (x *ChassisDescriptor) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *ChassisDescriptor) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *ChassisDescriptor) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ChassisDescriptor) GetControlCards() []*ControlCard {
	if x != nil {
		return x.ControlCards
	}
	return nil
}

type ControlCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartNumber   string `protobuf:"bytes,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Slot         int32  `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *ControlCard) Reset() {
	*x = ControlCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCard) ProtoMessage() {}

func (x *ControlCard) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCard.ProtoReflect.Descriptor instead.
func (*ControlCard) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{2}
}

func (x *ControlCard) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *ControlCard) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ControlCard) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type ControlCardState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string                             `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Status       ControlCardState_ControlCardStatus `protobuf:"varint,2,opt,name=status,proto3,enum=ControlCardState_ControlCardStatus" json:"status,omitempty"`
}

func (x *ControlCardState) Reset() {
	*x = ControlCardState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlCardState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCardState) ProtoMessage() {}

func (x *ControlCardState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCardState.ProtoReflect.Descriptor instead.
func (*ControlCardState) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{3}
}

func (x *ControlCardState) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ControlCardState) GetStatus() ControlCardState_ControlCardStatus {
	if x != nil {
		return x.Status
	}
	return ControlCardState_CONTROL_CARD_STATUS_UNSPECIFIED
}

type GetBootstrapDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedResponse       *GetBootstrapDataResponse_BootstrapDataSigned `protobuf:"bytes,1,opt,name=signed_response,json=signedResponse,proto3" json:"signed_response,omitempty"`
	OwnershipVoucher     []byte                                        `protobuf:"bytes,101,opt,name=ownership_voucher,json=ownershipVoucher,proto3" json:"ownership_voucher,omitempty"`
	OwnershipCertificate []byte                                        `protobuf:"bytes,102,opt,name=ownership_certificate,json=ownershipCertificate,proto3" json:"ownership_certificate,omitempty"`
	ResponseSignature    string                                        `protobuf:"bytes,103,opt,name=response_signature,json=responseSignature,proto3" json:"response_signature,omitempty"`
}

func (x *GetBootstrapDataResponse) Reset() {
	*x = GetBootstrapDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapDataResponse) ProtoMessage() {}

func (x *GetBootstrapDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapDataResponse.ProtoReflect.Descriptor instead.
func (*GetBootstrapDataResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{4}
}

func (x *GetBootstrapDataResponse) GetSignedResponse() *GetBootstrapDataResponse_BootstrapDataSigned {
	if x != nil {
		return x.SignedResponse
	}
	return nil
}

func (x *GetBootstrapDataResponse) GetOwnershipVoucher() []byte {
	if x != nil {
		return x.OwnershipVoucher
	}
	return nil
}

func (x *GetBootstrapDataResponse) GetOwnershipCertificate() []byte {
	if x != nil {
		return x.OwnershipCertificate
	}
	return nil
}

func (x *GetBootstrapDataResponse) GetResponseSignature() string {
	if x != nil {
		return x.ResponseSignature
	}
	return ""
}

type SoftwareImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Url           string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	OsImageHash   string `protobuf:"bytes,4,opt,name=os_image_hash,json=osImageHash,proto3" json:"os_image_hash,omitempty"`
	HashAlgorithm string `protobuf:"bytes,5,opt,name=hash_algorithm,json=hashAlgorithm,proto3" json:"hash_algorithm,omitempty"`
}

func (x *SoftwareImage) Reset() {
	*x = SoftwareImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftwareImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareImage) ProtoMessage() {}

func (x *SoftwareImage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareImage.ProtoReflect.Descriptor instead.
func (*SoftwareImage) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{5}
}

func (x *SoftwareImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SoftwareImage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SoftwareImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SoftwareImage) GetOsImageHash() string {
	if x != nil {
		return x.OsImageHash
	}
	return ""
}

func (x *SoftwareImage) GetHashAlgorithm() string {
	if x != nil {
		return x.HashAlgorithm
	}
	return ""
}

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credentialz.AuthorizedKeysRequest  `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
	Users       []*credentialz.AuthorizedUsersRequest `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	Passwords   []*credentialz.PasswordRequest        `protobuf:"bytes,3,rep,name=passwords,proto3" json:"passwords,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{6}
}

func (x *Credentials) GetCredentials() []*credentialz.AuthorizedKeysRequest {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *Credentials) GetUsers() []*credentialz.AuthorizedUsersRequest {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Credentials) GetPasswords() []*credentialz.PasswordRequest {
	if x != nil {
		return x.Passwords
	}
	return nil
}

type BootConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata         *structpb.Struct `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	VendorConfig     []byte           `protobuf:"bytes,2,opt,name=vendor_config,json=vendorConfig,proto3" json:"vendor_config,omitempty"`
	OcConfig         []byte           `protobuf:"bytes,3,opt,name=oc_config,json=ocConfig,proto3" json:"oc_config,omitempty"`
	BootloaderConfig *structpb.Struct `protobuf:"bytes,4,opt,name=bootloader_config,json=bootloaderConfig,proto3" json:"bootloader_config,omitempty"`
}

func (x *BootConfig) Reset() {
	*x = BootConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootConfig) ProtoMessage() {}

func (x *BootConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootConfig.ProtoReflect.Descriptor instead.
func (*BootConfig) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{7}
}

func (x *BootConfig) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootConfig) GetVendorConfig() []byte {
	if x != nil {
		return x.VendorConfig
	}
	return nil
}

func (x *BootConfig) GetOcConfig() []byte {
	if x != nil {
		return x.OcConfig
	}
	return nil
}

func (x *BootConfig) GetBootloaderConfig() *structpb.Struct {
	if x != nil {
		return x.BootloaderConfig
	}
	return nil
}

type ReportStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        ReportStatusRequest_BootstrapStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ReportStatusRequest_BootstrapStatus" json:"status,omitempty"`
	StatusMessage string                              `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
}

func (x *ReportStatusRequest) Reset() {
	*x = ReportStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStatusRequest) ProtoMessage() {}

func (x *ReportStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStatusRequest.ProtoReflect.Descriptor instead.
func (*ReportStatusRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{8}
}

func (x *ReportStatusRequest) GetStatus() ReportStatusRequest_BootstrapStatus {
	if x != nil {
		return x.Status
	}
	return ReportStatusRequest_BOOTSTRAP_STATUS_UNSPECIFIED
}

func (x *ReportStatusRequest) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{9}
}

type GetBootstrapDataResponse_BootstrapDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNum        string               `protobuf:"bytes,1,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	IntendedImage    *SoftwareImage       `protobuf:"bytes,2,opt,name=intended_image,json=intendedImage,proto3" json:"intended_image,omitempty"`
	BootPasswordHash string               `protobuf:"bytes,3,opt,name=boot_password_hash,json=bootPasswordHash,proto3" json:"boot_password_hash,omitempty"`
	ServerTrustCert  string               `protobuf:"bytes,4,opt,name=server_trust_cert,json=serverTrustCert,proto3" json:"server_trust_cert,omitempty"`
	BootConfig       *BootConfig          `protobuf:"bytes,5,opt,name=boot_config,json=bootConfig,proto3" json:"boot_config,omitempty"`
	Credentials      *Credentials         `protobuf:"bytes,6,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Pathz            *pathz.UploadRequest `protobuf:"bytes,7,opt,name=pathz,proto3" json:"pathz,omitempty"`
	Authz            *authz.UploadRequest `protobuf:"bytes,8,opt,name=authz,proto3" json:"authz,omitempty"`
	Certificates     *certz.UploadRequest `protobuf:"bytes,9,opt,name=certificates,proto3" json:"certificates,omitempty"`
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) Reset() {
	*x = GetBootstrapDataResponse_BootstrapDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapDataResponse_BootstrapDataResponse) ProtoMessage() {}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapDataResponse_BootstrapDataResponse.ProtoReflect.Descriptor instead.
func (*GetBootstrapDataResponse_BootstrapDataResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetIntendedImage() *SoftwareImage {
	if x != nil {
		return x.IntendedImage
	}
	return nil
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetBootPasswordHash() string {
	if x != nil {
		return x.BootPasswordHash
	}
	return ""
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetServerTrustCert() string {
	if x != nil {
		return x.ServerTrustCert
	}
	return ""
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetBootConfig() *BootConfig {
	if x != nil {
		return x.BootConfig
	}
	return nil
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetPathz() *pathz.UploadRequest {
	if x != nil {
		return x.Pathz
	}
	return nil
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetAuthz() *authz.UploadRequest {
	if x != nil {
		return x.Authz
	}
	return nil
}

func (x *GetBootstrapDataResponse_BootstrapDataResponse) GetCertificates() *certz.UploadRequest {
	if x != nil {
		return x.Certificates
	}
	return nil
}

type GetBootstrapDataResponse_BootstrapDataSigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*GetBootstrapDataResponse_BootstrapDataResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	Nonce     string                                            `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *GetBootstrapDataResponse_BootstrapDataSigned) Reset() {
	*x = GetBootstrapDataResponse_BootstrapDataSigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapDataResponse_BootstrapDataSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapDataResponse_BootstrapDataSigned) ProtoMessage() {}

func (x *GetBootstrapDataResponse_BootstrapDataSigned) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapDataResponse_BootstrapDataSigned.ProtoReflect.Descriptor instead.
func (*GetBootstrapDataResponse_BootstrapDataSigned) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP(), []int{4, 1}
}

func (x *GetBootstrapDataResponse_BootstrapDataSigned) GetResponses() []*GetBootstrapDataResponse_BootstrapDataResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *GetBootstrapDataResponse_BootstrapDataSigned) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

var File_github_com_openconfig_bootz_proto_bootz_proto protoreflect.FileDescriptor

var file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x7a, 0x2f, 0x63, 0x65,
	0x72, 0x74, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x7a, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x7a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f,
	0x70, 0x61, 0x74, 0x68, 0x7a, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x12, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x68, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x63,
	0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x12, 0x3f, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x67, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x22, 0xfd, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x11,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a,
	0x45, 0x44, 0x10, 0x02, 0x22, 0xd1, 0x06, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0xcf, 0x03, 0x0a, 0x15, 0x42,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x12, 0x35, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x6f, 0x6f, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x12, 0x32, 0x0a, 0x05, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x05, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x63, 0x65, 0x72, 0x74, 0x7a, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x7a, 0x0a, 0x13,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x53, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x73,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x22, 0xe2, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6e, 0x73,
	0x69, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x7a, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6e, 0x73, 0x69,
	0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x7a, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x0a, 0x42,
	0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x44, 0x0a, 0x11, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x8c, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x4f, 0x4f, 0x54, 0x53,
	0x54, 0x52, 0x41, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x4f, 0x4f,
	0x54, 0x53, 0x54, 0x52, 0x41, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x4f, 0x4f, 0x54, 0x53,
	0x54, 0x52, 0x41, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x4f, 0x4f, 0x54, 0x53, 0x54, 0x52,
	0x41, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8e, 0x01, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x12, 0x49, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6f, 0x6f,
	0x74, 0x7a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_openconfig_bootz_proto_bootz_proto_rawDescOnce sync.Once
	file_github_com_openconfig_bootz_proto_bootz_proto_rawDescData = file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc
)

func file_github_com_openconfig_bootz_proto_bootz_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_bootz_proto_bootz_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_bootz_proto_bootz_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_openconfig_bootz_proto_bootz_proto_rawDescData)
	})
	return file_github_com_openconfig_bootz_proto_bootz_proto_rawDescData
}

var file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_openconfig_bootz_proto_bootz_proto_goTypes = []interface{}{
	(ControlCardState_ControlCardStatus)(0),                // 0: ControlCardState.ControlCardStatus
	(ReportStatusRequest_BootstrapStatus)(0),               // 1: ReportStatusRequest.BootstrapStatus
	(*GetBootstrapDataRequest)(nil),                        // 2: GetBootstrapDataRequest
	(*ChassisDescriptor)(nil),                              // 3: ChassisDescriptor
	(*ControlCard)(nil),                                    // 4: ControlCard
	(*ControlCardState)(nil),                               // 5: ControlCardState
	(*GetBootstrapDataResponse)(nil),                       // 6: GetBootstrapDataResponse
	(*SoftwareImage)(nil),                                  // 7: SoftwareImage
	(*Credentials)(nil),                                    // 8: Credentials
	(*BootConfig)(nil),                                     // 9: BootConfig
	(*ReportStatusRequest)(nil),                            // 10: ReportStatusRequest
	(*EmptyResponse)(nil),                                  // 11: EmptyResponse
	(*GetBootstrapDataResponse_BootstrapDataResponse)(nil), // 12: GetBootstrapDataResponse.BootstrapDataResponse
	(*GetBootstrapDataResponse_BootstrapDataSigned)(nil),   // 13: GetBootstrapDataResponse.BootstrapDataSigned
	(*credentialz.AuthorizedKeysRequest)(nil),              // 14: gnsi.credentialz.v1.AuthorizedKeysRequest
	(*credentialz.AuthorizedUsersRequest)(nil),             // 15: gnsi.credentialz.v1.AuthorizedUsersRequest
	(*credentialz.PasswordRequest)(nil),                    // 16: gnsi.credentialz.v1.PasswordRequest
	(*structpb.Struct)(nil),                                // 17: google.protobuf.Struct
	(*pathz.UploadRequest)(nil),                            // 18: gnsi.pathz.v1.UploadRequest
	(*authz.UploadRequest)(nil),                            // 19: gnsi.authz.v1.UploadRequest
	(*certz.UploadRequest)(nil),                            // 20: gnsi.certz.v1.UploadRequest
}
var file_github_com_openconfig_bootz_proto_bootz_proto_depIdxs = []int32{
	3,  // 0: GetBootstrapDataRequest.chassis_descriptor:type_name -> ChassisDescriptor
	5,  // 1: GetBootstrapDataRequest.control_card_state:type_name -> ControlCardState
	4,  // 2: ChassisDescriptor.control_cards:type_name -> ControlCard
	0,  // 3: ControlCardState.status:type_name -> ControlCardState.ControlCardStatus
	13, // 4: GetBootstrapDataResponse.signed_response:type_name -> GetBootstrapDataResponse.BootstrapDataSigned
	14, // 5: Credentials.credentials:type_name -> gnsi.credentialz.v1.AuthorizedKeysRequest
	15, // 6: Credentials.users:type_name -> gnsi.credentialz.v1.AuthorizedUsersRequest
	16, // 7: Credentials.passwords:type_name -> gnsi.credentialz.v1.PasswordRequest
	17, // 8: BootConfig.metadata:type_name -> google.protobuf.Struct
	17, // 9: BootConfig.bootloader_config:type_name -> google.protobuf.Struct
	1,  // 10: ReportStatusRequest.status:type_name -> ReportStatusRequest.BootstrapStatus
	7,  // 11: GetBootstrapDataResponse.BootstrapDataResponse.intended_image:type_name -> SoftwareImage
	9,  // 12: GetBootstrapDataResponse.BootstrapDataResponse.boot_config:type_name -> BootConfig
	8,  // 13: GetBootstrapDataResponse.BootstrapDataResponse.credentials:type_name -> Credentials
	18, // 14: GetBootstrapDataResponse.BootstrapDataResponse.pathz:type_name -> gnsi.pathz.v1.UploadRequest
	19, // 15: GetBootstrapDataResponse.BootstrapDataResponse.authz:type_name -> gnsi.authz.v1.UploadRequest
	20, // 16: GetBootstrapDataResponse.BootstrapDataResponse.certificates:type_name -> gnsi.certz.v1.UploadRequest
	12, // 17: GetBootstrapDataResponse.BootstrapDataSigned.responses:type_name -> GetBootstrapDataResponse.BootstrapDataResponse
	2,  // 18: Bootstrap.GetBootstrapData:input_type -> GetBootstrapDataRequest
	10, // 19: Bootstrap.ReportStatus:input_type -> ReportStatusRequest
	6,  // 20: Bootstrap.GetBootstrapData:output_type -> GetBootstrapDataResponse
	11, // 21: Bootstrap.ReportStatus:output_type -> EmptyResponse
	20, // [20:22] is the sub-list for method output_type
	18, // [18:20] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_bootz_proto_bootz_proto_init() }
func file_github_com_openconfig_bootz_proto_bootz_proto_init() {
	if File_github_com_openconfig_bootz_proto_bootz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChassisDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlCardState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftwareImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapDataResponse_BootstrapDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapDataResponse_BootstrapDataSigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_bootz_proto_bootz_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_bootz_proto_bootz_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_bootz_proto_bootz_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_bootz_proto_bootz_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_bootz_proto_bootz_proto = out.File
	file_github_com_openconfig_bootz_proto_bootz_proto_rawDesc = nil
	file_github_com_openconfig_bootz_proto_bootz_proto_goTypes = nil
	file_github_com_openconfig_bootz_proto_bootz_proto_depIdxs = nil
}
