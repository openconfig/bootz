// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: github.com/openconfig/bootz/server/entitymanager/proto/entity.proto

package entity

import (
	bootz "github.com/openconfig/bootz/proto/bootz"
	authz "github.com/openconfig/gnsi/authz"
	certz "github.com/openconfig/gnsi/certz"
	pathz "github.com/openconfig/gnsi/pathz"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Options struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	GnsiGlobalConfig *GNSIConfig            `protobuf:"bytes,1,opt,name=gnsi_global_config,json=gnsiGlobalConfig,proto3" json:"gnsi_global_config,omitempty"`
	Bootzserver      string                 `protobuf:"bytes,2,opt,name=bootzserver,proto3" json:"bootzserver,omitempty"`
	ArtifactDir      string                 `protobuf:"bytes,3,opt,name=artifact_dir,json=artifactDir,proto3" json:"artifact_dir,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Options) Reset() {
	*x = Options{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Options) GetGnsiGlobalConfig() *GNSIConfig {
	if x != nil {
		return x.GnsiGlobalConfig
	}
	return nil
}

func (x *Options) GetBootzserver() string {
	if x != nil {
		return x.Bootzserver
	}
	return ""
}

func (x *Options) GetArtifactDir() string {
	if x != nil {
		return x.ArtifactDir
	}
	return ""
}

type Entities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *Options               `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Chassis       []*Chassis             `protobuf:"bytes,2,rep,name=chassis,proto3" json:"chassis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entities) Reset() {
	*x = Entities{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entities) ProtoMessage() {}

func (x *Entities) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entities.ProtoReflect.Descriptor instead.
func (*Entities) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{1}
}

func (x *Entities) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Entities) GetChassis() []*Chassis {
	if x != nil {
		return x.Chassis
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BootConfig    *BootConfig            `protobuf:"bytes,1,opt,name=boot_config,json=bootConfig,proto3" json:"boot_config,omitempty"`
	GnsiConfig    *GNSIConfig            `protobuf:"bytes,2,opt,name=gnsi_config,json=gnsiConfig,proto3" json:"gnsi_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{2}
}

func (x *Config) GetBootConfig() *BootConfig {
	if x != nil {
		return x.BootConfig
	}
	return nil
}

func (x *Config) GetGnsiConfig() *GNSIConfig {
	if x != nil {
		return x.GnsiConfig
	}
	return nil
}

type BootConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Metadata         *structpb.Struct       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	VendorConfigFile string                 `protobuf:"bytes,2,opt,name=vendor_config_file,json=vendorConfigFile,proto3" json:"vendor_config_file,omitempty"`
	VendorConfig     []byte                 `protobuf:"bytes,3,opt,name=vendor_config,json=vendorConfig,proto3" json:"vendor_config,omitempty"`
	OcConfigFile     string                 `protobuf:"bytes,4,opt,name=oc_config_file,json=ocConfigFile,proto3" json:"oc_config_file,omitempty"`
	OcConfig         []byte                 `protobuf:"bytes,5,opt,name=oc_config,json=ocConfig,proto3" json:"oc_config,omitempty"`
	BootloaderConfig *structpb.Struct       `protobuf:"bytes,6,opt,name=bootloader_config,json=bootloaderConfig,proto3" json:"bootloader_config,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BootConfig) Reset() {
	*x = BootConfig{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootConfig) ProtoMessage() {}

func (x *BootConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootConfig.ProtoReflect.Descriptor instead.
func (*BootConfig) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{3}
}

func (x *BootConfig) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootConfig) GetVendorConfigFile() string {
	if x != nil {
		return x.VendorConfigFile
	}
	return ""
}

func (x *BootConfig) GetVendorConfig() []byte {
	if x != nil {
		return x.VendorConfig
	}
	return nil
}

func (x *BootConfig) GetOcConfigFile() string {
	if x != nil {
		return x.OcConfigFile
	}
	return ""
}

func (x *BootConfig) GetOcConfig() []byte {
	if x != nil {
		return x.OcConfig
	}
	return nil
}

func (x *BootConfig) GetBootloaderConfig() *structpb.Struct {
	if x != nil {
		return x.BootloaderConfig
	}
	return nil
}

type GNSIConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AuthzUploadFile string                 `protobuf:"bytes,1,opt,name=authz_upload_file,json=authzUploadFile,proto3" json:"authz_upload_file,omitempty"`
	AuthzUpload     *authz.UploadRequest   `protobuf:"bytes,2,opt,name=authz_upload,json=authzUpload,proto3" json:"authz_upload,omitempty"`
	PathzUploadFile string                 `protobuf:"bytes,3,opt,name=pathz_upload_file,json=pathzUploadFile,proto3" json:"pathz_upload_file,omitempty"`
	PathzUpload     *pathz.UploadRequest   `protobuf:"bytes,4,opt,name=pathz_upload,json=pathzUpload,proto3" json:"pathz_upload,omitempty"`
	CertzUpload     *certz.UploadRequest   `protobuf:"bytes,5,opt,name=certz_upload,json=certzUpload,proto3" json:"certz_upload,omitempty"`
	CertzUploadFile string                 `protobuf:"bytes,6,opt,name=certz_upload_file,json=certzUploadFile,proto3" json:"certz_upload_file,omitempty"`
	CredentialsFile string                 `protobuf:"bytes,7,opt,name=credentials_file,json=credentialsFile,proto3" json:"credentials_file,omitempty"`
	Credentials     *bootz.Credentials     `protobuf:"bytes,8,opt,name=credentials,proto3" json:"credentials,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GNSIConfig) Reset() {
	*x = GNSIConfig{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GNSIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GNSIConfig) ProtoMessage() {}

func (x *GNSIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GNSIConfig.ProtoReflect.Descriptor instead.
func (*GNSIConfig) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{4}
}

func (x *GNSIConfig) GetAuthzUploadFile() string {
	if x != nil {
		return x.AuthzUploadFile
	}
	return ""
}

func (x *GNSIConfig) GetAuthzUpload() *authz.UploadRequest {
	if x != nil {
		return x.AuthzUpload
	}
	return nil
}

func (x *GNSIConfig) GetPathzUploadFile() string {
	if x != nil {
		return x.PathzUploadFile
	}
	return ""
}

func (x *GNSIConfig) GetPathzUpload() *pathz.UploadRequest {
	if x != nil {
		return x.PathzUpload
	}
	return nil
}

func (x *GNSIConfig) GetCertzUpload() *certz.UploadRequest {
	if x != nil {
		return x.CertzUpload
	}
	return nil
}

func (x *GNSIConfig) GetCertzUploadFile() string {
	if x != nil {
		return x.CertzUploadFile
	}
	return ""
}

func (x *GNSIConfig) GetCredentialsFile() string {
	if x != nil {
		return x.CredentialsFile
	}
	return ""
}

func (x *GNSIConfig) GetCredentials() *bootz.Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type DHCPConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	HardwareAddress string                 `protobuf:"bytes,1,opt,name=hardware_address,json=hardwareAddress,proto3" json:"hardware_address,omitempty"`
	IpAddress       string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Gateway         string                 `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Bootzserver     string                 `protobuf:"bytes,4,opt,name=bootzserver,proto3" json:"bootzserver,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DHCPConfig) Reset() {
	*x = DHCPConfig{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DHCPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DHCPConfig) ProtoMessage() {}

func (x *DHCPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DHCPConfig.ProtoReflect.Descriptor instead.
func (*DHCPConfig) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{5}
}

func (x *DHCPConfig) GetHardwareAddress() string {
	if x != nil {
		return x.HardwareAddress
	}
	return ""
}

func (x *DHCPConfig) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *DHCPConfig) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *DHCPConfig) GetBootzserver() string {
	if x != nil {
		return x.Bootzserver
	}
	return ""
}

type ControlCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    string                 `protobuf:"bytes,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	SerialNumber  string                 `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	DhcpConfig    *DHCPConfig            `protobuf:"bytes,4,opt,name=dhcp_config,json=dhcpConfig,proto3" json:"dhcp_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlCard) Reset() {
	*x = ControlCard{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCard) ProtoMessage() {}

func (x *ControlCard) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCard.ProtoReflect.Descriptor instead.
func (*ControlCard) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{6}
}

func (x *ControlCard) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *ControlCard) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ControlCard) GetDhcpConfig() *DHCPConfig {
	if x != nil {
		return x.DhcpConfig
	}
	return nil
}

type Chassis struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SerialNumber           string                 `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Name                   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PartNumber             string                 `protobuf:"bytes,3,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Manufacturer           string                 `protobuf:"bytes,4,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	BootloaderPasswordHash string                 `protobuf:"bytes,5,opt,name=bootloader_password_hash,json=bootloaderPasswordHash,proto3" json:"bootloader_password_hash,omitempty"`
	BootMode               bootz.BootMode         `protobuf:"varint,6,opt,name=boot_mode,json=bootMode,proto3,enum=bootz.BootMode" json:"boot_mode,omitempty"`
	SoftwareImage          *bootz.SoftwareImage   `protobuf:"bytes,7,opt,name=software_image,json=softwareImage,proto3" json:"software_image,omitempty"`
	ControllerCards        []*ControlCard         `protobuf:"bytes,8,rep,name=controller_cards,json=controllerCards,proto3" json:"controller_cards,omitempty"`
	Config                 *Config                `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	DhcpConfig             *DHCPConfig            `protobuf:"bytes,12,opt,name=dhcp_config,json=dhcpConfig,proto3" json:"dhcp_config,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Chassis) Reset() {
	*x = Chassis{}
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chassis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chassis) ProtoMessage() {}

func (x *Chassis) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chassis.ProtoReflect.Descriptor instead.
func (*Chassis) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{7}
}

func (x *Chassis) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Chassis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chassis) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *Chassis) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Chassis) GetBootloaderPasswordHash() string {
	if x != nil {
		return x.BootloaderPasswordHash
	}
	return ""
}

func (x *Chassis) GetBootMode() bootz.BootMode {
	if x != nil {
		return x.BootMode
	}
	return bootz.BootMode(0)
}

func (x *Chassis) GetSoftwareImage() *bootz.SoftwareImage {
	if x != nil {
		return x.SoftwareImage
	}
	return nil
}

func (x *Chassis) GetControllerCards() []*ControlCard {
	if x != nil {
		return x.ControllerCards
	}
	return nil
}

func (x *Chassis) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Chassis) GetDhcpConfig() *DHCPConfig {
	if x != nil {
		return x.DhcpConfig
	}
	return nil
}

var File_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto protoreflect.FileDescriptor

const file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDesc = "" +
	"\n" +
	"Cgithub.com/openconfig/bootz/server/entitymanager/proto/entity.proto\x12\x06entity\x1a-github.com/openconfig/bootz/proto/bootz.proto\x1a,github.com/openconfig/gnsi/authz/authz.proto\x1a,github.com/openconfig/gnsi/certz/certz.proto\x1a,github.com/openconfig/gnsi/pathz/pathz.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x90\x01\n" +
	"\aOptions\x12@\n" +
	"\x12gnsi_global_config\x18\x01 \x01(\v2\x12.entity.GNSIConfigR\x10gnsiGlobalConfig\x12 \n" +
	"\vbootzserver\x18\x02 \x01(\tR\vbootzserver\x12!\n" +
	"\fartifact_dir\x18\x03 \x01(\tR\vartifactDir\"`\n" +
	"\bEntities\x12)\n" +
	"\aoptions\x18\x01 \x01(\v2\x0f.entity.OptionsR\aoptions\x12)\n" +
	"\achassis\x18\x02 \x03(\v2\x0f.entity.ChassisR\achassis\"r\n" +
	"\x06Config\x123\n" +
	"\vboot_config\x18\x01 \x01(\v2\x12.entity.BootConfigR\n" +
	"bootConfig\x123\n" +
	"\vgnsi_config\x18\x02 \x01(\v2\x12.entity.GNSIConfigR\n" +
	"gnsiConfig\"\x9d\x02\n" +
	"\n" +
	"BootConfig\x123\n" +
	"\bmetadata\x18\x01 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12,\n" +
	"\x12vendor_config_file\x18\x02 \x01(\tR\x10vendorConfigFile\x12#\n" +
	"\rvendor_config\x18\x03 \x01(\fR\fvendorConfig\x12$\n" +
	"\x0eoc_config_file\x18\x04 \x01(\tR\focConfigFile\x12\x1b\n" +
	"\toc_config\x18\x05 \x01(\fR\bocConfig\x12D\n" +
	"\x11bootloader_config\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x10bootloaderConfig\"\xb4\x03\n" +
	"\n" +
	"GNSIConfig\x12*\n" +
	"\x11authz_upload_file\x18\x01 \x01(\tR\x0fauthzUploadFile\x12?\n" +
	"\fauthz_upload\x18\x02 \x01(\v2\x1c.gnsi.authz.v1.UploadRequestR\vauthzUpload\x12*\n" +
	"\x11pathz_upload_file\x18\x03 \x01(\tR\x0fpathzUploadFile\x12?\n" +
	"\fpathz_upload\x18\x04 \x01(\v2\x1c.gnsi.pathz.v1.UploadRequestR\vpathzUpload\x12?\n" +
	"\fcertz_upload\x18\x05 \x01(\v2\x1c.gnsi.certz.v1.UploadRequestR\vcertzUpload\x12*\n" +
	"\x11certz_upload_file\x18\x06 \x01(\tR\x0fcertzUploadFile\x12)\n" +
	"\x10credentials_file\x18\a \x01(\tR\x0fcredentialsFile\x124\n" +
	"\vcredentials\x18\b \x01(\v2\x12.bootz.CredentialsR\vcredentials\"\x92\x01\n" +
	"\n" +
	"DHCPConfig\x12)\n" +
	"\x10hardware_address\x18\x01 \x01(\tR\x0fhardwareAddress\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x18\n" +
	"\agateway\x18\x03 \x01(\tR\agateway\x12 \n" +
	"\vbootzserver\x18\x04 \x01(\tR\vbootzserver\"\x88\x01\n" +
	"\vControlCard\x12\x1f\n" +
	"\vpart_number\x18\x01 \x01(\tR\n" +
	"partNumber\x12#\n" +
	"\rserial_number\x18\x02 \x01(\tR\fserialNumber\x123\n" +
	"\vdhcp_config\x18\x04 \x01(\v2\x12.entity.DHCPConfigR\n" +
	"dhcpConfig\"\xc9\x03\n" +
	"\aChassis\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vpart_number\x18\x03 \x01(\tR\n" +
	"partNumber\x12\"\n" +
	"\fmanufacturer\x18\x04 \x01(\tR\fmanufacturer\x128\n" +
	"\x18bootloader_password_hash\x18\x05 \x01(\tR\x16bootloaderPasswordHash\x12,\n" +
	"\tboot_mode\x18\x06 \x01(\x0e2\x0f.bootz.BootModeR\bbootMode\x12;\n" +
	"\x0esoftware_image\x18\a \x01(\v2\x14.bootz.SoftwareImageR\rsoftwareImage\x12>\n" +
	"\x10controller_cards\x18\b \x03(\v2\x13.entity.ControlCardR\x0fcontrollerCards\x12&\n" +
	"\x06config\x18\t \x01(\v2\x0e.entity.ConfigR\x06config\x123\n" +
	"\vdhcp_config\x18\f \x01(\v2\x12.entity.DHCPConfigR\n" +
	"dhcpConfigb\x06proto3"

var (
	file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescOnce sync.Once
	file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescData []byte
)

func file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDesc), len(file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDesc)))
	})
	return file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDescData
}

var file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_goTypes = []any{
	(*Options)(nil),             // 0: entity.Options
	(*Entities)(nil),            // 1: entity.Entities
	(*Config)(nil),              // 2: entity.Config
	(*BootConfig)(nil),          // 3: entity.BootConfig
	(*GNSIConfig)(nil),          // 4: entity.GNSIConfig
	(*DHCPConfig)(nil),          // 5: entity.DHCPConfig
	(*ControlCard)(nil),         // 6: entity.ControlCard
	(*Chassis)(nil),             // 7: entity.Chassis
	(*structpb.Struct)(nil),     // 8: google.protobuf.Struct
	(*authz.UploadRequest)(nil), // 9: gnsi.authz.v1.UploadRequest
	(*pathz.UploadRequest)(nil), // 10: gnsi.pathz.v1.UploadRequest
	(*certz.UploadRequest)(nil), // 11: gnsi.certz.v1.UploadRequest
	(*bootz.Credentials)(nil),   // 12: bootz.Credentials
	(bootz.BootMode)(0),         // 13: bootz.BootMode
	(*bootz.SoftwareImage)(nil), // 14: bootz.SoftwareImage
}
var file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_depIdxs = []int32{
	4,  // 0: entity.Options.gnsi_global_config:type_name -> entity.GNSIConfig
	0,  // 1: entity.Entities.options:type_name -> entity.Options
	7,  // 2: entity.Entities.chassis:type_name -> entity.Chassis
	3,  // 3: entity.Config.boot_config:type_name -> entity.BootConfig
	4,  // 4: entity.Config.gnsi_config:type_name -> entity.GNSIConfig
	8,  // 5: entity.BootConfig.metadata:type_name -> google.protobuf.Struct
	8,  // 6: entity.BootConfig.bootloader_config:type_name -> google.protobuf.Struct
	9,  // 7: entity.GNSIConfig.authz_upload:type_name -> gnsi.authz.v1.UploadRequest
	10, // 8: entity.GNSIConfig.pathz_upload:type_name -> gnsi.pathz.v1.UploadRequest
	11, // 9: entity.GNSIConfig.certz_upload:type_name -> gnsi.certz.v1.UploadRequest
	12, // 10: entity.GNSIConfig.credentials:type_name -> bootz.Credentials
	5,  // 11: entity.ControlCard.dhcp_config:type_name -> entity.DHCPConfig
	13, // 12: entity.Chassis.boot_mode:type_name -> bootz.BootMode
	14, // 13: entity.Chassis.software_image:type_name -> bootz.SoftwareImage
	6,  // 14: entity.Chassis.controller_cards:type_name -> entity.ControlCard
	2,  // 15: entity.Chassis.config:type_name -> entity.Config
	5,  // 16: entity.Chassis.dhcp_config:type_name -> entity.DHCPConfig
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_init() }
func file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_init() {
	if File_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDesc), len(file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_depIdxs,
		MessageInfos:      file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto = out.File
	file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_goTypes = nil
	file_github_com_openconfig_bootz_server_entitymanager_proto_entity_proto_depIdxs = nil
}
